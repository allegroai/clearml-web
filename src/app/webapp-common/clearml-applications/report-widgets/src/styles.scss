// Custom Theming for Angular Material
// For more information: https://material.angular.io/guide/theming
@use '../../../../../../node_modules/@angular/material/index' as mat;
// Plus imports for other components in your app.

// Include the common styles for Angular Material. We include this here so that you only
// have to load a single css file for Angular Material in your app.
// Be sure that you only ever include this mixin once!
@include mat.core();

// Define the palettes for your theme using the Material Design palettes available in palette.scss
// (imported above). For each palette, you can optionally specify a default, lighter, and darker
// hue. Available color palettes: https://material.io/design/color/
$theme-primary: mat.define-palette(mat.$indigo-palette);
$theme-accent: mat.define-palette(mat.$pink-palette, A200, A100, A400);

// The warn palette is optional (defaults to red).
$theme-warn: mat.define-palette(mat.$red-palette);

// Create the theme object. A theme consists of configurations for individual
// theming systems such as "color" or "typography".
$theme: mat.define-light-theme((
  color: (
    primary: $theme-primary,
    accent: $theme-accent,
    warn: $theme-warn,
  )
));

// Include theme styles for core and each component used in your app.
// Alternatively, you can import and @include the theme mixins for each component
// that you are using.
@include mat.dialog-theme($theme);

@import "src/app/webapp-common/shared/ui-components/styles/variables";

* {
  margin: 0;
  padding: 0;
  box-sizing: border-box;
}

html, body {
  height: 100%;
  overflow: hidden;
}

body {
  font-family: sans-serif;
  border: 1px solid $dark-border;
  border-radius: 4px;
  display: flex;
  align-items: center;
  justify-content: center;
}

.pointer {
  cursor: pointer;
}

.d-flex-center {
  display: flex !important;
  align-items: center !important;
  justify-content: center !important;

  &.gap {
    gap: 12px !important;
  }
}

.mat-dialog-container {
  padding: 0 !important;
}

.d-flex {
  display: flex;
}

.dark-theme .plot-container .hoverlayer {
  line[stroke-width="1"] {
    stroke: $blue-300;
  }

  line[stroke-width="3"] {
    stroke: $blue-900;
  }

  .hovertext {
    rect {
      fill: #000 !important;
    }
    path {
      stroke: #000  !important;
    }
  }
}

.al-icon, .icon {
  width: 24px;
  height: 24px;
  font-size: 24px;

  &.xs {
    width: 10px;
    height: 10px;
    font-size: 10px;
  }

  &.msm {
    width: 13px;
    height: 13px;
    font-size: 13px;
  }

  &.sm {
    width: 16px;
    min-width: 16px;
    height: 16px;
    font-size: 16px;
  }

  &.sm-md {
    width: 20px;
    height: 20px;
    font-size: 20px;
  }

  &.md {
    width: 28px;
    height: 28px;
    font-size: 28px;
  }

  &.lg {
    width: 32px;
    height: 32px;
    font-size: 32px;
  }

  &.l-40 {
    width: 40px;
    height: 40px;
    font-size: 40px;
  }

  &.xl {
    width: 48px;
    height: 48px;
    font-size: 48px;
  }

  &.xxl {
    width: 64px;
    height: 64px;
    font-size: 64px;
  }
}

.al-icon {
  text-align: center;
  display: inline-block;
}


.modebar {
  top: 20px !important;
}

.modebar-btn[data-attr="plotly-disabled-maximize"] {
  cursor: default !important;

  path {
    fill: $blue-600 !important;
  }
}

.legendlines path,
.legendpoints path {
  cursor: default !important;
}
